{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ricky\\\\Desktop\\\\CAA\\\\CAAGolfPlatformFrontEnd-main\\\\src\\\\pages\\\\AddMatchDataform.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useTable } from 'react-table';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport Select from 'react-select';\nimport DatePicker from \"react-datepicker\";\nimport Alert from 'react-bootstrap/Alert';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SchoolService from '../services/SchoolService';\nimport EventService from '../services/EventService';\nconst eventsOptions = [];\nconst AddMatchDataform = () => {\n  const options = [];\n  const [loading, setLoading] = useState(false);\n  const inputEventID = useRef();\n  const [eventID, setEventID] = useState('');\n  const [tableLength, setTableLength] = useState('');\n  const [data, setEventScorings] = useState([]);\n  const [schoolImages, setSchoolImages] = useState([]);\n  const [isSchoolImagesLoaded, setIsSchoolImagesLoaded] = useState(false);\n  const [playerScore, setPlayerScore] = useState([]);\n  const [playerScores, setPlayerScores] = useState([]);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (localStorage.username === undefined) {\n      navigate(\"/\");\n    } else {\n      // get Schools\n      SchoolService.getSchools().then(response => {\n        for (var i = 0; i < response.data.length; i++) {\n          {\n            schoolImages.push({\n              name: response.data[i].name,\n              image: response.data[i].image\n            });\n          }\n        }\n        setSchoolImages(schoolImages);\n        setIsSchoolImagesLoaded(true);\n        console.log(\"School Service Called\");\n      });\n      fetchData();\n    }\n  }, []);\n  const isValidForm = () => {\n    var valid = true;\n    /* check division */\n\n    /* check awayTeam */\n    if (eventID < 1) {\n      inputEventID.current.style.color = \"red\";\n      valid = false;\n    } else {\n      inputEventID.current.style.color = \"black\";\n    }\n    for (let i = 0; i < playerScores.length; i++) {\n      if (playerScores.length == tableLength && playerScores[i].playerScore === '') {\n        return false; // Return false if any score is empty\n      }\n    }\n\n    return valid;\n  };\n  const fetchData = () => {\n    eventsOptions.length = 0;\n    EventService.getEventsBySchool(localStorage.school).then(response => {\n      for (var i = 0; i < response.data.length; i++) {\n        eventsOptions.push({\n          value: response.data[i].id,\n          label: response.data[i].id + \" - \" + response.data[i].eventDate\n        });\n      }\n    });\n  };\n  async function getEventScoringsByEventSchool(eventID) {\n    await EventService.getEventScoringsByEventSchool(eventID, localStorage.school).then(response => {\n      setTableLength(response.data.length);\n      setEventScorings(response.data);\n    });\n    setPlayerScores([]);\n  }\n  const columns = React.useMemo(() => [{\n    Header: 'Division',\n    accessor: 'playerDivision'\n  }, {\n    Header: 'Player',\n    Cell: tableProps => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, tableProps.row.original.playerID, \" - \", tableProps.row.original.playerName)\n  }, {\n    Header: 'Score',\n    Cell: tableProps => /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      placeholder: \"Score\",\n      name: \"score\",\n      className: \"form-control\"\n      //value = {}\n      ,\n      onChange: e => {\n        var eventID = localStorage.eventID;\n        var playerID = tableProps.row.original.playerID;\n        var id = eventID + \"_\" + playerID;\n        var playerScore = parseInt(e.target.value);\n        //remove if record already exists\n        setPlayerScores(prevPlayerScores => prevPlayerScores.filter(selectedItem => selectedItem.playerID !== playerID));\n        //add new record\n        setPlayerScores(prevPlayerScores => [...prevPlayerScores, {\n          id,\n          eventID,\n          playerID,\n          playerScore\n        }]);\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    })\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state\n  } = useTable({\n    columns,\n    data\n  });\n  const updatePlayerScores = async e => {\n    e.preventDefault();\n    if (isValidForm()) {\n      setLoading(true);\n      await EventService.saveEventScorings(playerScores).then(response => {\n        localStorage.message = \"Player Scores added successfully\";\n        navigate('/event-scoring');\n      }).catch(error1 => {\n        console.log(error1);\n        setError(\"Failed to Add Player Scores\");\n        setLoading(false);\n      });\n      setLoading(false);\n    }\n  };\n  const getImage = schoolName => {\n    const foundSchool = schoolImages.find(school => schoolName === school.name);\n    if (foundSchool) {\n      return foundSchool.image;\n    }\n    return null;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  })), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      paddingRight: '0.75rem',\n      paddingLeft: '0.75rem',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card col-md-6 offset-md-3 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, isSchoolImagesLoaded && /*#__PURE__*/React.createElement(\"img\", {\n    src: `data:image/jpeg;base64,${getImage(localStorage.school)}`,\n    style: {\n      width: 35,\n      height: 35,\n      marginRight: 10\n    },\n    className: \"player1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 45\n    }\n  }), \"Add Scores\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: inputEventID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 41\n    }\n  }, \"Event:\"), /*#__PURE__*/React.createElement(Select, {\n    type: \"text\",\n    placeholder: \"Pick Event\",\n    onChange: e => {\n      setEventID(e.value);\n      getEventScoringsByEventSchool(e.value);\n    },\n    options: eventsOptions,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  })), eventID === null || eventID === undefined || eventID === \"\" ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '99.9%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    className: \"table table-striped\",\n    style: {\n      height: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 45\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 49\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    style: {\n      background: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 53\n    }\n  }), \" \", column.render('Header'), \" \"))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 45\n    }\n  }), rows.map(row => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 53\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 57\n        }\n      }), \" \", cell.render('Cell'), \" \");\n    }));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 41\n    }\n  }, \"Player Scores\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 41\n    }\n  }, playerScores.map((playerScore, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 49\n    }\n  }, \"Event ID: \", playerScore.eventID, \" Player ID: \", playerScore.playerID, \", Score: \", playerScore.playerScore)))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      updatePlayerScores(e);\n    },\n    className: \"btn btn-primary mb-2 player-right player-left\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 37\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      navigate('/event-scoring');\n    },\n    className: \"btn btn-primary mb-2 player-right\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }\n  }, \"Cancel\")))))))));\n};\nexport default AddMatchDataform;","map":{"version":3,"names":["React","useState","useEffect","useRef","useTable","useNavigate","Navbar","Select","DatePicker","Alert","SchoolService","EventService","eventsOptions","AddMatchDataform","options","loading","setLoading","inputEventID","eventID","setEventID","tableLength","setTableLength","data","setEventScorings","schoolImages","setSchoolImages","isSchoolImagesLoaded","setIsSchoolImagesLoaded","playerScore","setPlayerScore","playerScores","setPlayerScores","error","setError","navigate","localStorage","username","undefined","getSchools","then","response","i","length","push","name","image","console","log","fetchData","isValidForm","valid","current","style","color","getEventsBySchool","school","value","id","label","eventDate","getEventScoringsByEventSchool","columns","useMemo","Header","accessor","Cell","tableProps","row","original","playerID","playerName","e","parseInt","target","prevPlayerScores","filter","selectedItem","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","updatePlayerScores","preventDefault","saveEventScorings","message","catch","error1","getImage","schoolName","foundSchool","find","paddingRight","paddingLeft","marginLeft","marginRight","width","height","maxWidth","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","background","render","getRowProps","cells","cell","getCellProps","index"],"sources":["C:/Users/ricky/Desktop/CAA/CAAGolfPlatformFrontEnd-main/src/pages/AddMatchDataform.js"],"sourcesContent":["import React, {useState,useEffect,useRef} from 'react'\nimport { useTable} from 'react-table'\nimport {useNavigate} from 'react-router-dom'\nimport Navbar from '../components/Navbar';\nimport Select from 'react-select';\nimport DatePicker from \"react-datepicker\";\nimport Alert from 'react-bootstrap/Alert';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SchoolService from '../services/SchoolService';\nimport EventService from '../services/EventService';\nconst eventsOptions = [];\n\n\nconst AddMatchDataform = () => {\n    const options = [];\n    const [loading,setLoading] = useState(false);\n    const inputEventID = useRef();\n    const [eventID,setEventID] = useState('')\n    const [tableLength,setTableLength] = useState('')\n    const [data,setEventScorings]=useState([]);\n    const [schoolImages, setSchoolImages] = useState([]);\n    const [isSchoolImagesLoaded, setIsSchoolImagesLoaded] = useState(false);\n    const [playerScore,setPlayerScore]=useState([]);\n    const [playerScores, setPlayerScores] = useState([]);\n    const [error, setError] = useState(\"\")\n   \n    const navigate=useNavigate();\n    useEffect(()=>{\n        if(localStorage.username === undefined){\n            navigate(\"/\");\n        }\n        else{\n            // get Schools\n            SchoolService.getSchools().then((response) => {                 \n                for(var i = 0; i < response.data.length; i++) \n                {\n                        {schoolImages.push({\n                            name: response.data[i].name,\n                            image: response.data[i].image,\n                        });\n                    }\n                }\n                setSchoolImages(schoolImages);\n                setIsSchoolImagesLoaded(true); \n                console.log(\"School Service Called\")   \n            });\n            fetchData();\n        }\n    },[]); \n    \n    const isValidForm = () => {\n        var valid = true;\n           /* check division */\n           \n            /* check awayTeam */\n            if(eventID < 1){\n                inputEventID.current.style.color = \"red\";\n                valid = false;\n            }\n            else {\n                inputEventID.current.style.color = \"black\";\n            }\n            for (let i = 0; i < playerScores.length; i++) {\n                if (playerScores.length == tableLength && playerScores[i].playerScore === '') {\n                  return false; // Return false if any score is empty\n                }\n            }\n\n            return valid;\n    }\n    const fetchData = ()=>{\n        eventsOptions.length = 0;\n        EventService.getEventsBySchool(localStorage.school).then((response) => {           \n            for(var i = 0; i < response.data.length; i++) \n            {\n                eventsOptions.push({\n                    value: response.data[i].id,\n                    label: response.data[i].id+\" - \"+response.data[i].eventDate\n                });\n            }\n        });\n       \n       \n    }\n    async function getEventScoringsByEventSchool(eventID){\n        await EventService.getEventScoringsByEventSchool(eventID,localStorage.school).then((response) => {\n            setTableLength(response.data.length);\n            setEventScorings(response.data);\n        });\n        setPlayerScores([]);    \n    }\n    const columns = React.useMemo(\n        () => [\n          {\n            Header: 'Division',\n            accessor: 'playerDivision',        \n          },\n         \n          {\n            Header: 'Player',\n            Cell: tableProps => (\n                <div>  \n                    {tableProps.row.original.playerID} - {tableProps.row.original.playerName}        \n                </div> \n                ),\n          },\n          {\n            Header: 'Score',\n            Cell: tableProps => (\n                <input\n                    type = \"number\"\n                    min= \"1\"\n                    placeholder = \"Score\"\n                    name = \"score\"\n                    className = \"form-control\"\n                    //value = {}\n                    onChange={(e) => { \n                        var eventID = localStorage.eventID;\n                        var playerID = tableProps.row.original.playerID;\n                        var id = eventID +\"_\"+ playerID;\n                        var playerScore = parseInt(e.target.value); \n                        //remove if record already exists\n                        setPlayerScores((prevPlayerScores) => prevPlayerScores.filter((selectedItem) => selectedItem.playerID !== playerID));\n                        //add new record\n                        setPlayerScores((prevPlayerScores) =>[...prevPlayerScores, {id, eventID, playerID, playerScore }]);\n                        }\n                    }\n                    required />            \n                ),      \n          }\n        ],\n        []\n    )\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state,\n       \n    } = useTable({ columns, data  })\n    const updatePlayerScores = async(e)  => {\n        e.preventDefault(); \n        if(isValidForm()){\n            setLoading(true);\n            await EventService.saveEventScorings(playerScores).then((response) => {\n                localStorage.message = \"Player Scores added successfully\";\n                navigate('/event-scoring');    \n                }).catch(error1 => { \n                console.log(error1);\n                setError(\"Failed to Add Player Scores\");\n                setLoading(false);      \n            })\n            setLoading(false); \n        }\n    }\n    const getImage = (schoolName) => {    \n        const foundSchool = schoolImages.find(school => schoolName === school.name);\n        if (foundSchool) {\n        return foundSchool.image;\n        }    \n        return null;\n    };\n    return(\n        <div>\n            <header>\n                <Navbar /> \n            </header>\n            {error && <Alert variant=\"danger\">{error}</Alert>}  \n            <br></br>\n            <div className = \"container\" style={{paddingRight:'0.75rem',paddingLeft:'0.75rem',marginLeft: 'auto',marginRight:'auto'}}>\n                <div className = \"row\">\n                    <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                        <div>\n                            <br></br>\n                            <h2 className = \"text-center\">\n                                {isSchoolImagesLoaded  && (\n                                            <img src={`data:image/jpeg;base64,${getImage(localStorage.school)}`}  style={{ width: 35, height:35,marginRight: 10 }} className = 'player1'/>  \n                                        )}        \n                                Add Scores\n                            </h2>\n                            <div className = \"card-body\">\n                                <form>\n                                <div className = \"form-group mb-2\">\n                                   \n                                </div >\n                                    <br/>                                    \n                                    <div ref={inputEventID}>\n                                        <label className = \"form-label\">Event:</label>\n                                        <Select\n                                            type = \"text\"                                            \n                                            placeholder = \"Pick Event\"\n                                            onChange = {(e) =>{ \n                                                setEventID(e.value);\n                                                getEventScoringsByEventSchool(e.value);\n                                               \n                                            }} \n                                            options={eventsOptions}\n                                            required\n                                        />\n                                    <br/>\n                                   </div>\n                                   { /* <label className = \"form-label\">Division:</label>\n                                   <div className = \"form-group mb-2\" ref={inputDivision}>                                      \n                                        <input type=\"radio\" value=\"JH\" name=\"division\" onChange = {(e) => setDivision(e.target.value)} /> Junior High \n                                        <br/>\n                                        <input type=\"radio\" value=\"HS\" name=\"division\" onChange = {(e) => setDivision(e.target.value)} /> High School\n                                        <br/>\n                                       \n                                    </div>*/ }\n                                   {(eventID === null || eventID === undefined || eventID === \"\") ?\n                                        <></> \n                                        :\n                                        <div   style={{ maxWidth: '99.9%' }}> \n                                            <table {...getTableProps()} className = \"table table-striped\" style ={{height:20}}>\n                                            <thead>\n                                                {headerGroups.map(headerGroup => (\n                                                <tr {...headerGroup.getHeaderGroupProps()}>\n                                                    {headerGroup.headers.map(column => (\n                                                    <th {...column.getHeaderProps()} style = {{background: 'white'}}> {column.render('Header')} </th>\n                                                    ))}\n                                                </tr>\n                                                ))}\n                                            </thead>\n                                            <tbody {...getTableBodyProps()}>\n                                                {rows.map(row => {\n                                                prepareRow(row)\n                                                return (\n                                                    <tr {...row.getRowProps()}>\n                                                    {row.cells.map(cell => {\n                                                        return (\n                                                        <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                                                        )\n                                                    })}\n                                                    </tr>\n                                                )\n                                                })}\n                                            </tbody>\n                                            </table>\n                                        </div>\n                                    }\n                                    <div>\n                                    <div>\n                                        <h1>Player Scores</h1>\n                                        <ul>\n                                            {playerScores.map((playerScore, index) => (\n                                                <li key={index}>\n                                                    Event ID: {playerScore.eventID} Player ID: {playerScore.playerID}, Score: {playerScore.playerScore}\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </div>\n                                    <button onClick={(e)=>{ \n                                        updatePlayerScores(e);\n                                    \n                                    }} className = \"btn btn-primary mb-2 player-right player-left\"  disabled = {loading}>Submit</button>\n                                    <button onClick={(e)=>{ navigate('/event-scoring');}} className = \"btn btn-primary mb-2 player-right\"  disabled = {loading} >Cancel</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddMatchDataform "],"mappings":"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"},"metadata":{},"sourceType":"module"}