{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ricky\\\\Desktop\\\\CAA\\\\CAAGolfPlatformFrontEnd-main\\\\src\\\\pages\\\\AddScores.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useTable } from 'react-table';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport Select from 'react-select';\nimport Alert from 'react-bootstrap/Alert';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SchoolService from '../services/SchoolService';\nimport EventService from '../services/EventService';\nconst eventsOptions = [];\nconst AddScores = () => {\n  const options = [];\n  const [loading, setLoading] = useState(false);\n  const inputEventID = useRef();\n  const [eventIdState, setEventIdState] = useState('');\n  const [tableLength, setTableLength] = useState(0);\n  const [data, setEventScorings] = useState([]);\n  const [schoolImages, setSchoolImages] = useState([]);\n  const [isSchoolImagesLoaded, setIsSchoolImagesLoaded] = useState(false);\n  const [playerScores, setPlayerScores] = useState([]);\n  const [error, setError] = useState(\"\");\n  console.log(\"how many time line 24 eventID\" + eventIdState);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (localStorage.username === undefined) {\n      navigate(\"/\");\n    }\n    if (localStorage.role == \"Admin\") {\n      navigate(\"/all-players\");\n    } else {\n      // get Schools\n      SchoolService.getSchools().then(response => {\n        for (var i = 0; i < response.data.length; i++) {\n          {\n            schoolImages.push({\n              name: response.data[i].name,\n              image: response.data[i].image\n            });\n          }\n        }\n        setSchoolImages(schoolImages);\n        setIsSchoolImagesLoaded(true);\n        console.log(\"School Service Called\");\n      });\n      fetchData();\n    }\n  }, []);\n  const isValidForm = () => {\n    var valid = true;\n    /* check division */\n\n    /* check awayTeam */\n    if (eventIdState < 1) {\n      inputEventID.current.style.color = \"red\";\n      setError(\"Select an Event\");\n      valid = false;\n    } else {\n      inputEventID.current.style.color = \"black\";\n    }\n    if (playerScores.length !== tableLength) {\n      setError(\"Add Scores For All Players\");\n      return false;\n    }\n    return valid;\n  };\n  const fetchData = () => {\n    eventsOptions.length = 0;\n    console.log(\"how many time line 74 -fetchdata \");\n    EventService.getEventsBySchool(localStorage.school).then(response => {\n      for (var i = 0; i < response.data.length; i++) {\n        eventsOptions.push({\n          value: response.data[i].id,\n          label: response.data[i].id + \" - \" + response.data[i].eventDate\n        });\n      }\n    });\n  };\n  async function getEventScoringsByEventSchool(eventID) {\n    await EventService.getEventScoringsByEventSchool(eventID, localStorage.school).then(response => {\n      setTableLength(response.data.length);\n      setEventScorings(response.data);\n    });\n    setPlayerScores([]);\n  }\n  const columns = React.useMemo(() => [{\n    Header: 'Division',\n    accessor: 'playerDivision'\n  }, {\n    Header: 'Player',\n    Cell: tableProps => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, tableProps.row.original.playerID, \" - \", tableProps.row.original.playerName)\n  }, {\n    Header: 'Score',\n    Cell: tableProps => /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      placeholder: \"Score\",\n      name: \"score\",\n      className: \"form-control\",\n      style: {\n        width: 85\n      }\n      //value = {}\n      ,\n      onChange: e => {\n        console.log(\"event id: \" + eventIdState);\n        var eventID = eventIdState;\n        var playerID = tableProps.row.original.playerID;\n        var id = eventID + \"_\" + playerID;\n        var playerScore = parseInt(e.target.value);\n\n        //remove if record already exists\n        setPlayerScores(prevPlayerScores => prevPlayerScores.filter(selectedItem => selectedItem.playerID !== playerID));\n        //add new record\n        setPlayerScores(prevPlayerScores => [...prevPlayerScores, {\n          id,\n          eventID,\n          playerID,\n          playerScore\n        }]);\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    })\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state\n  } = useTable({\n    columns,\n    data\n  });\n  const updatePlayerScores = async e => {\n    e.preventDefault();\n    if (isValidForm()) {\n      setLoading(true);\n      await EventService.saveEventScorings(playerScores).then(response => {\n        localStorage.message = \"Player Scores added successfully\";\n        navigate('/event-scoring');\n      }).catch(error1 => {\n        console.log(error1);\n        setError(\"Failed to Add Player Scores\");\n        setLoading(false);\n      });\n      setLoading(false);\n    }\n  };\n  const getImage = schoolName => {\n    const foundSchool = schoolImages.find(school => schoolName === school.name);\n    if (foundSchool) {\n      return foundSchool.image;\n    }\n    return null;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, console.log(\"how many time line 172 \"), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  })), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      paddingRight: '0.75rem',\n      paddingLeft: '0.75rem',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card col-md-6 offset-md-3 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, isSchoolImagesLoaded && /*#__PURE__*/React.createElement(\"img\", {\n    src: `data:image/jpeg;base64,${getImage(localStorage.school)}`,\n    style: {\n      width: 35,\n      height: 35,\n      marginRight: 10\n    },\n    className: \"player1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 45\n    }\n  }), \"Add Scores\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: inputEventID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 41\n    }\n  }, \"Event:\"), console.log(\"Line 195 before select: \" + eventIdState), /*#__PURE__*/React.createElement(Select, {\n    type: \"text\",\n    placeholder: \"Pick Event\",\n    onChange: e => {\n      setEventIdState(e.value);\n      console.log(\"E.val\" + e.value + \"Eventidstate:\" + eventIdState);\n      getEventScoringsByEventSchool(e.value);\n    },\n    options: eventsOptions,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  })), console.log(\"Line 206 After select: \" + eventIdState), eventIdState === null || eventIdState === undefined || eventIdState === \"\" ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '99.9%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    className: \"table table-striped\",\n    style: {\n      height: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 45\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 49\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    style: {\n      background: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 53\n    }\n  }), \" \", column.render('Header'), \" \"))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 45\n    }\n  }), rows.map(row => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 53\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 57\n        }\n      }), \" \", cell.render('Cell'), \" \");\n    }));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 37\n    }\n  }, eventIdState), console.log(\"Line 251 after H1 tag \" + eventIdState), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 37\n    }\n  }, tableLength), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 37\n    }\n  }, \"Player Scores\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 41\n    }\n  }, playerScores.map(score => /*#__PURE__*/React.createElement(\"li\", {\n    key: score.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 49\n    }\n  }, \"ID: \", score.id, \", Event ID: \", score.eventID, \", Player ID: \", score.playerID, \", Score: \", score.playerScore))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      updatePlayerScores(e);\n    },\n    className: \"btn btn-primary mb-2 player-right player-left\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 37\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      navigate('/event-scoring');\n    },\n    className: \"btn btn-primary mb-2 player-right\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 37\n    }\n  }, \"Cancel\")))))))));\n};\nexport default AddScores;","map":{"version":3,"names":["React","useState","useEffect","useRef","useTable","useNavigate","Navbar","Select","Alert","SchoolService","EventService","eventsOptions","AddScores","options","loading","setLoading","inputEventID","eventIdState","setEventIdState","tableLength","setTableLength","data","setEventScorings","schoolImages","setSchoolImages","isSchoolImagesLoaded","setIsSchoolImagesLoaded","playerScores","setPlayerScores","error","setError","console","log","navigate","localStorage","username","undefined","role","getSchools","then","response","i","length","push","name","image","fetchData","isValidForm","valid","current","style","color","getEventsBySchool","school","value","id","label","eventDate","getEventScoringsByEventSchool","eventID","columns","useMemo","Header","accessor","Cell","tableProps","row","original","playerID","playerName","width","e","playerScore","parseInt","target","prevPlayerScores","filter","selectedItem","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","updatePlayerScores","preventDefault","saveEventScorings","message","catch","error1","getImage","schoolName","foundSchool","find","paddingRight","paddingLeft","marginLeft","marginRight","height","maxWidth","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","background","render","getRowProps","cells","cell","getCellProps","score"],"sources":["C:/Users/ricky/Desktop/CAA/CAAGolfPlatformFrontEnd-main/src/pages/AddScores.js"],"sourcesContent":["import React, {useState,useEffect,useRef} from 'react'\nimport { useTable} from 'react-table'\nimport {useNavigate} from 'react-router-dom'\nimport Navbar from '../components/Navbar';\nimport Select from 'react-select';\nimport Alert from 'react-bootstrap/Alert';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SchoolService from '../services/SchoolService';\nimport EventService from '../services/EventService';\nconst eventsOptions = [];\n\n\nconst AddScores = () => {\n    const options = [];\n    const [loading,setLoading] = useState(false);\n    const inputEventID = useRef();\n    const [eventIdState,setEventIdState] = useState('');\n    const [tableLength,setTableLength] = useState(0);\n    const [data,setEventScorings]=useState([]);\n    const [schoolImages, setSchoolImages] = useState([]);\n    const [isSchoolImagesLoaded, setIsSchoolImagesLoaded] = useState(false);\n    const [playerScores, setPlayerScores] = useState([]);\n    const [error, setError] = useState(\"\")\n    console.log(\"how many time line 24 eventID\" + eventIdState);\n    const navigate=useNavigate();\n    useEffect(()=>{\n        if(localStorage.username === undefined){\n            navigate(\"/\");\n        }\n        if(localStorage.role == \"Admin\"){\n            navigate(\"/all-players\");\n        }\n        else{\n            // get Schools\n            SchoolService.getSchools().then((response) => {                 \n                for(var i = 0; i < response.data.length; i++) \n                {\n                        {schoolImages.push({\n                            name: response.data[i].name,\n                            image: response.data[i].image,\n                        });\n                    }\n                }\n                setSchoolImages(schoolImages);\n                setIsSchoolImagesLoaded(true); \n                console.log(\"School Service Called\")   \n            });\n            fetchData();\n        }\n    },[]); \n    \n    const isValidForm = () => {\n        var valid = true;\n           /* check division */\n           \n            /* check awayTeam */\n            if(eventIdState < 1){\n                inputEventID.current.style.color = \"red\";\n                setError(\"Select an Event\");\n                valid = false;\n            }\n            else {\n                inputEventID.current.style.color = \"black\";\n            }\n            if (playerScores.length !== tableLength) {\n                setError(\"Add Scores For All Players\");\n                return false;\n            }\n\n            return valid;\n    }\n    const fetchData = ()=>{\n        eventsOptions.length = 0;\n        console.log(\"how many time line 74 -fetchdata \")\n        EventService.getEventsBySchool(localStorage.school).then((response) => {           \n            for(var i = 0; i < response.data.length; i++) \n            {\n                eventsOptions.push({\n                    value: response.data[i].id,\n                    label: response.data[i].id+\" - \"+response.data[i].eventDate\n                });\n            }\n        });\n       \n       \n    }\n    async function getEventScoringsByEventSchool(eventID){\n        await EventService.getEventScoringsByEventSchool(eventID,localStorage.school).then((response) => {\n            setTableLength(response.data.length);\n            setEventScorings(response.data);\n        });\n        setPlayerScores([]);    \n    }\n    const columns = React.useMemo(\n        () => [\n          {\n            Header: 'Division',\n            accessor: 'playerDivision',        \n          },\n         \n          {\n            Header: 'Player',\n            Cell: tableProps => (\n                <div>  \n                    {tableProps.row.original.playerID} - {tableProps.row.original.playerName}        \n                </div> \n                ),\n          },\n          {\n            Header: 'Score',\n            Cell: tableProps => (\n                <input\n                    type = \"number\"\n                    min= \"1\"\n                    placeholder = \"Score\"\n                    name = \"score\"\n                    className = \"form-control\"\n                    style = {{width: 85}}\n                    //value = {}\n                    onChange={(e) => {\n                        console.log(\"event id: \"+ eventIdState)\n                        var eventID = eventIdState;\n                        var playerID = tableProps.row.original.playerID;\n                        var id = eventID +\"_\"+ playerID;\n                        var playerScore = parseInt(e.target.value); \n                        \n                        //remove if record already exists\n                        setPlayerScores((prevPlayerScores) => prevPlayerScores.filter((selectedItem) => selectedItem.playerID !== playerID));\n                        //add new record\n                        setPlayerScores((prevPlayerScores) =>[...prevPlayerScores, {id, eventID, playerID, playerScore }]);\n                        }\n                    }\n                    required />            \n                ),      \n          }\n        ],\n        []\n    )\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state,\n       \n    } = useTable({ columns, data  })\n    const updatePlayerScores = async(e)  => {\n        e.preventDefault(); \n        if(isValidForm()){\n            setLoading(true);\n            await EventService.saveEventScorings(playerScores).then((response) => {\n                localStorage.message = \"Player Scores added successfully\";\n                navigate('/event-scoring');    \n                }).catch(error1 => { \n                console.log(error1);\n                setError(\"Failed to Add Player Scores\");\n                setLoading(false);      \n            })\n            setLoading(false); \n        }\n    }\n    const getImage = (schoolName) => {    \n        const foundSchool = schoolImages.find(school => schoolName === school.name);\n        if (foundSchool) {\n        return foundSchool.image;\n        }    \n        return null;\n    };\n    return(\n        <div>\n            <header>\n                {console.log(\"how many time line 172 \")}\n                <Navbar /> \n            </header>\n            {error && <Alert variant=\"danger\">{error}</Alert>}  \n            <br></br>\n            <div className = \"container\" style={{paddingRight:'0.75rem',paddingLeft:'0.75rem',marginLeft: 'auto',marginRight:'auto'}}>\n                <div className = \"row\">\n                    <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                        <div>\n                            <br></br>\n                            <h2 className = \"text-center\">\n                                {isSchoolImagesLoaded  && (\n                                            <img src={`data:image/jpeg;base64,${getImage(localStorage.school)}`}  style={{ width: 35, height:35,marginRight: 10 }} className = 'player1'/>  \n                                        )}        \n                                Add Scores\n                            </h2>\n                            <div className = \"card-body\">\n                                <form>\n                                <div className = \"form-group mb-2\">\n                                   \n                                </div >\n                                    <br/>                                    \n                                    <div ref={inputEventID}>\n                                        <label className = \"form-label\">Event:</label>\n                                        {console.log(\"Line 195 before select: \" + eventIdState)}\n                                        <Select\n                                            type = \"text\"                                            \n                                            placeholder = \"Pick Event\"\n                                            onChange = {(e) =>{ \n                                                setEventIdState(e.value);\n                                                console.log(\"E.val\" + e.value + \"Eventidstate:\"+ eventIdState)\n                                                getEventScoringsByEventSchool(e.value);\n                                            }} \n                                            options={eventsOptions}\n                                            required\n                                        />\n                                    <br/>\n                                   </div>\n                                   {console.log(\"Line 206 After select: \" + eventIdState)}\n                                   { /* <label className = \"form-label\">Division:</label>\n                                   <div className = \"form-group mb-2\" ref={inputDivision}>                                      \n                                        <input type=\"radio\" value=\"JH\" name=\"division\" onChange = {(e) => setDivision(e.target.value)} /> Junior High \n                                        <br/>\n                                        <input type=\"radio\" value=\"HS\" name=\"division\" onChange = {(e) => setDivision(e.target.value)} /> High School\n                                        <br/>\n                                       \n                                    </div>*/ }\n                                   {(eventIdState === null || eventIdState === undefined || eventIdState === \"\") ?\n                                        <></> \n                                        :\n                                        <div   style={{ maxWidth: '99.9%' }}> \n                                            <table {...getTableProps()} className = \"table table-striped\" style ={{height:20}}>\n                                            <thead>\n                                                {headerGroups.map(headerGroup => (\n                                                <tr {...headerGroup.getHeaderGroupProps()}>\n                                                    {headerGroup.headers.map(column => (\n                                                    <th {...column.getHeaderProps()} style = {{background: 'white'}}> {column.render('Header')} </th>\n                                                    ))}\n                                                </tr>\n                                                ))}\n                                            </thead>\n                                            <tbody {...getTableBodyProps()}>\n                                                {rows.map(row => {\n                                                prepareRow(row)\n                                                return (\n                                                    <tr {...row.getRowProps()}>\n                                                    {row.cells.map(cell => {\n                                                        return (\n                                                        <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                                                        )\n                                                    })}\n                                                    </tr>\n                                                )\n                                                })}\n                                            </tbody>\n                                            </table>\n                                        </div>\n                                    }\n                                    <div>\n                                    <h1>{eventIdState}</h1>\n                                    {console.log(\"Line 251 after H1 tag \" + eventIdState)}\n                                    <h1>{tableLength}</h1>\n                                    <h1>Player Scores</h1>\n                                        <ul>\n                                            {playerScores.map(score => (\n                                                <li key={score.id}>\n                                                    ID: {score.id}, Event ID: {score.eventID}, Player ID: {score.playerID}, Score: {score.playerScore}\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    <button onClick={(e)=>{ \n                                        updatePlayerScores(e);\n                                    \n                                    }} className = \"btn btn-primary mb-2 player-right player-left\"  disabled = {loading}>Submit</button>\n                                    <button onClick={(e)=>{ navigate('/event-scoring');}} className = \"btn btn-primary mb-2 player-right\"  disabled = {loading} >Cancel</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddScores "],"mappings":"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"},"metadata":{},"sourceType":"module"}