{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ricky\\\\Desktop\\\\CAA\\\\CAAGolfPlatformFrontEnd-main\\\\src\\\\components\\\\reactTables\\\\EventScoringReactTable.js\";\nimport { useTable, useGlobalFilter } from 'react-table';\nimport React, { useState, useEffect } from 'react';\nimport MatchService from '../../services/MatchService.js';\nimport { CSVLink } from 'react-csv';\nimport win from \"../images/check.png\";\nimport { GlobalFilter } from '../GlobalFilter.js';\nimport { GiGolfTee } from \"react-icons/gi\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport * as RiIcons from 'react-icons/ri';\nimport * as SiIcons from 'react-icons/si';\nimport { MdScoreboard } from \"react-icons/md\";\nimport { IoGolfSharp } from \"react-icons/io5\";\nimport pic from \"../images/golfPlayer.png\";\nimport SchoolService from '../../services/SchoolService.js';\nimport { useNavigate } from \"react-router-dom\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Select from 'react-select';\nimport EventService from '../../services/EventService.js';\nconst divisions = [{\n  value: 'All Divisions',\n  label: 'All Divisions'\n}, {\n  value: \"JH\",\n  label: 'JH'\n}, {\n  value: \"HS\",\n  label: 'HS'\n}];\nconst EventScoringReactTable = () => {\n  const navigate = useNavigate();\n  const [data, setEventScorings] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const schoolImages = [];\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      await SchoolService.getSchools().then(response => {\n        for (var i = 0; i < response.data.length; i++) {\n          {\n            schoolImages.push({\n              name: response.data[i].name,\n              image: response.data[i].image\n            });\n          }\n        }\n      });\n      await EventService.getEventScorings().then(response => {\n        setEventScorings(response.data);\n      });\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n  async function fetchDataByDivision(division) {\n    setLoading(true);\n    //await sleep(2000);\n    await EventService.getEventScoringsByDivision(division).then(response => {\n      setEventScorings(response.data);\n    });\n    setLoading(false);\n  }\n  const getImage = schoolName => {\n    const foundSchool = schoolImages.find(school => schoolName === school.name);\n    if (foundSchool) {\n      console.log(\"True:\", schoolName, foundSchool.name);\n      return foundSchool.image;\n    }\n    return null;\n  };\n  const columns = React.useMemo(() => [{\n    Header: 'Date',\n    accessor: 'eventDate'\n  }, {\n    Header: 'Event ID',\n    accessor: 'eventID'\n  }, {\n    Header: 'Golf Course',\n    accessor: 'course',\n    Cell: tableProps => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IoGolfSharp, {\n      style: {\n        width: 20,\n        height: 20,\n        marginRight: 5,\n        marginTop: -5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }\n    }), tableProps.row.original.course)\n  }, {\n    Header: 'Division',\n    accessor: 'playerDivision'\n  }, {\n    Header: \"Player's School\",\n    accessor: 'playerSchool',\n    Cell: tableProps => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `data:image/jpeg;base64,${getImage(tableProps.row.original.playerSchool)}`,\n      style: {\n        width: 30,\n        height: 30,\n        marginRight: 10\n      },\n      className: \"player1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 20\n      }\n    }), tableProps.row.original.playerSchool)\n  }, {\n    Header: 'Player',\n    Cell: tableProps => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: pic,\n      style: {\n        width: 30,\n        height: 30\n      },\n      className: \"player1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 12\n      }\n    }), tableProps.row.original.playerID, \" - \", tableProps.row.original.playerName),\n    accessor: 'player'\n    // accessor: d => (<div>{d.player1ID} - {d.player1Name}</div>),\n  },\n  /*{\n    Header: 'Score',\n    Cell: tableProps => (\n        <div>\n            {tableProps.row.original.playerScore === 0 ? (\n                <h6>Not Played</h6>\n            ) : (\n                <div>{tableProps.row.original.playerScore}</div>\n            )}\n        </div>\n    ),\n  },*/\n  /*{\n    Header: 'Player Score', // New column for player score\n    accessor: 'playerScore',\n    Cell: tableProps => {\n        const playerScore = tableProps.row.original.playerScore;\n        if (playerScore > 0) { // Only show the input field if playerScore is above 0\n            return (\n                <input\n                    type=\"text\"\n                    value={playerScore}\n                    onChange={e => {\n                        // Handle inline editing here\n                        const newValue = e.target.value;\n                        // Update the playerScore in your data structure\n                        // You might need to use setState or update your data source accordingly\n                    }}\n                />\n            );\n        } else {\n            return ( \n              <h6>Not Played</h6>\n            ); // Just display the player score if it's not above 0\n        }\n    }\n  },*/\n  {\n    Header: 'Player Score',\n    accessor: 'playerScore',\n    Cell: tableProps => {\n      const {\n        playerScore,\n        id\n      } = tableProps.row.original;\n      const [isEditing, setIsEditing] = React.useState(false);\n      const [editedScore, setEditedScore] = React.useState(playerScore);\n      const handleEdit = () => {\n        setIsEditing(true);\n      };\n      const handleSave = () => {\n        // Save the edited score\n        // For demonstration, just log the edited score to the console\n        console.log(`New score for ID ${id}: ${editedScore}`);\n\n        // You can update the data structure or make an API call to update the score here\n\n        setIsEditing(false);\n      };\n      const handleCancel = () => {\n        // Cancel editing\n        setEditedScore(playerScore);\n        setIsEditing(false);\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, isEditing ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: editedScore,\n        onChange: e => setEditedScore(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: handleSave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 33\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 33\n        }\n      }, \"Cancel\")) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }\n      }, playerScore > 0 && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: handleEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 37\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }\n      }, playerScore > 0 ? playerScore : 'Not Played')));\n    }\n  }, {\n    Header: localStorage.role === 'Admin' ? 'Edit' : ' ',\n    Cell: tableProps => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, localStorage.role === 'Admin' ? /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        borderRadius: 50\n      },\n      className: \" btn\",\n      disabled: loading,\n      hidden: tableProps.row.original.playerScore <= 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FaRegEdit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 20\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null))\n  }, {\n    Header: localStorage.role === 'Admin' ? 'Delete' : ' ',\n    Cell: tableProps => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, localStorage.role === 'Admin' ? /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        borderRadius: 50\n      },\n      onClick: e => {\n        deleteEventScoring(tableProps.row.original.id);\n      },\n      className: \" btn\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(RiIcons.RiDeleteBin6Line, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 23\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null))\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data\n  }, useGlobalFilter);\n  const {\n    globalFilter\n  } = state;\n  async function deleteEventScoring(id) {\n    const confirmed = window.confirm('Are you sure you want to remove this player from this event?');\n    if (!confirmed) {\n      return;\n    }\n    setLoading(true);\n    try {\n      await EventService.deleteEventScoring(id);\n      localStorage.message = \"Player Removed from Event Successfully\";\n    } catch (error) {\n      console.log(error);\n      setError('Failed to Remove Player from Event');\n    } finally {\n      setLoading(false);\n      window.location.reload(false);\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(GiGolfTee, {\n    style: {\n      marginBottom: 10,\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 40\n    }\n  }), \"Event Scoring\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: \"right\",\n      paddingRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 10\n    }\n  }, localStorage.role != \"Admin\" ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary mb-2 \",\n    onClick: () => {\n      navigate('/add-scores');\n    },\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(MdScoreboard, {\n    style: {\n      width: 20,\n      height: 20,\n      marginRight: 5,\n      marginBottom: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 167\n    }\n  }), \"Add Scores\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(CSVLink, {\n    data: data,\n    filename: \"Golf Event Scorings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 70\n    }\n  }, \"  \", /*#__PURE__*/React.createElement(SiIcons.SiMicrosoftexcel, {\n    style: {\n      width: 20,\n      height: 20,\n      marginRight: 5,\n      marginBottom: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 129\n    }\n  }), \"Download\"), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rowC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GlobalFilter, {\n    filter: globalFilter,\n    setFilter: setGlobalFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 200,\n      marginLeft: 10,\n      borderRadius: 10,\n      borderColor: 'grey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: 500,\n      borderRadius: 50\n    },\n    value: divisions.value,\n    isSearchable: false,\n    onChange: e => {\n      fetchDataByDivision(e.label);\n    },\n    options: divisions,\n    defaultValue: divisions[0],\n    styles: {\n      control: (baseStyles, state) => ({\n        ...baseStyles,\n        borderRadius: \"20px\"\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '99.9%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    className: \"table table-striped\",\n    style: {\n      height: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    style: {\n      background: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 19\n    }\n  }), \" \", column.render('Header'), \" \"))))), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ClipLoader, {\n    color: \"#0d6efd\",\n    loading: loading,\n    size: 50,\n    cssOverride: {\n      marginLeft: '370%',\n      marginRight: 'auto',\n      marginTop: '20%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }), !loading ? rows.map(row => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 19\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }\n      }), \" \", cell.render('Cell'), \" \");\n    }));\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null))))));\n};\nexport default EventScoringReactTable;","map":{"version":3,"names":["useTable","useGlobalFilter","React","useState","useEffect","MatchService","CSVLink","win","GlobalFilter","GiGolfTee","FaRegEdit","RiIcons","SiIcons","MdScoreboard","IoGolfSharp","pic","SchoolService","useNavigate","ClipLoader","Select","EventService","divisions","value","label","EventScoringReactTable","navigate","data","setEventScorings","loading","setLoading","error","setError","schoolImages","fetchData","getSchools","then","response","i","length","push","name","image","getEventScorings","fetchDataByDivision","division","getEventScoringsByDivision","getImage","schoolName","foundSchool","find","school","console","log","columns","useMemo","Header","accessor","Cell","tableProps","width","height","marginRight","marginTop","row","original","course","playerSchool","playerID","playerName","playerScore","id","isEditing","setIsEditing","editedScore","setEditedScore","handleEdit","handleSave","handleCancel","e","target","localStorage","role","borderRadius","deleteEventScoring","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","confirmed","window","confirm","message","location","reload","marginBottom","float","paddingRight","marginLeft","borderColor","control","baseStyles","maxWidth","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","background","render","getRowProps","cells","cell","getCellProps"],"sources":["C:/Users/ricky/Desktop/CAA/CAAGolfPlatformFrontEnd-main/src/components/reactTables/EventScoringReactTable.js"],"sourcesContent":["import { useTable, useGlobalFilter } from 'react-table'\nimport React,{useState, useEffect} from 'react';\nimport MatchService from '../../services/MatchService.js';\nimport {CSVLink} from 'react-csv';\nimport win from \"../images/check.png\";\nimport { GlobalFilter } from '../GlobalFilter.js';\nimport { GiGolfTee } from \"react-icons/gi\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport * as RiIcons from 'react-icons/ri';\nimport * as SiIcons from 'react-icons/si';\nimport { MdScoreboard } from \"react-icons/md\";\nimport { IoGolfSharp } from \"react-icons/io5\";\nimport pic from \"../images/golfPlayer.png\";\n\nimport SchoolService from '../../services/SchoolService.js';\nimport {useNavigate} from \"react-router-dom\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Select from 'react-select';\nimport EventService from '../../services/EventService.js';\nconst divisions = [\n  { value: 'All Divisions', label: 'All Divisions' },\n  { value: \"JH\", label: 'JH' },\n  { value: \"HS\", label: 'HS' },\n]\n\n\nconst EventScoringReactTable=()=>{ \n  const navigate=useNavigate();\n  const [data,setEventScorings]=useState([]);\n  const [loading,setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const schoolImages = [];\n  \n  useEffect(()=>{\n    async function fetchData() {\n      setLoading(true);\n      await SchoolService.getSchools().then((response) => {           \n        for(var i = 0; i < response.data.length; i++) \n        {\n                {schoolImages.push({\n                    name: response.data[i].name,\n                    image: response.data[i].image,\n                });\n            }\n        }\n      });\n      await EventService.getEventScorings().then((response) => {           \n        setEventScorings(response.data);\n    });\n      setLoading(false);  \n     \n    }\n    fetchData();      \n  },[]);\n  async function fetchDataByDivision(division) {     \n    setLoading(true);\n    //await sleep(2000);\n    await EventService.getEventScoringsByDivision(division).then((response) => {           \n      setEventScorings(response.data);\n    });\n    setLoading(false);  \n  }\n  const getImage = (schoolName) => {    \n    const foundSchool = schoolImages.find(school => schoolName === school.name);\n    if (foundSchool) {\n      console.log(\"True:\", schoolName, foundSchool.name);\n      return foundSchool.image;\n    }    \n    return null;\n  };\n\n\n  const columns = React.useMemo(\n    () => [\n        {\n            Header: 'Date',\n            accessor: 'eventDate',        \n          },\n          {\n            Header: 'Event ID',\n            accessor: 'eventID',        \n          },\n          {\n            Header: 'Golf Course',\n            accessor: 'course', \n            Cell: tableProps => (\n              <div>             \n               <IoGolfSharp style={{ width: 20, height: 20,marginRight: 5,marginTop:-5}}/>\n                {tableProps.row.original.course}  \n              </div> ),          \n          },\n          {\n            Header: 'Division',\n            accessor: 'playerDivision',        \n          },\n          {\n            Header: \"Player's School\",\n            accessor: 'playerSchool',   \n            Cell: tableProps => (\n                <div>      \n                   <img src={`data:image/jpeg;base64,${getImage(tableProps.row.original.playerSchool)}`}  style={{ width: 30, height:30,marginRight: 10 }} className = 'player1'/>       \n                   \n                    {tableProps.row.original.playerSchool}  \n                </div> ),     \n          },\n          {\n            Header: 'Player',\n            Cell: tableProps => (\n              <div>  \n           \n           <img  src= {pic} style={{ width: 30, height:30 }} className = 'player1' />\n                  {tableProps.row.original.playerID} - {tableProps.row.original.playerName}\n                 \n        \n                \n              </div> \n            ),\n            accessor: 'player' ,\n           // accessor: d => (<div>{d.player1ID} - {d.player1Name}</div>),\n          },\n          /*{\n            Header: 'Score',\n            Cell: tableProps => (\n                <div>\n                    {tableProps.row.original.playerScore === 0 ? (\n                        <h6>Not Played</h6>\n                    ) : (\n                        <div>{tableProps.row.original.playerScore}</div>\n                    )}\n                </div>\n            ),\n        },*/\n        /*{\n          Header: 'Player Score', // New column for player score\n          accessor: 'playerScore',\n          Cell: tableProps => {\n              const playerScore = tableProps.row.original.playerScore;\n              if (playerScore > 0) { // Only show the input field if playerScore is above 0\n                  return (\n                      <input\n                          type=\"text\"\n                          value={playerScore}\n                          onChange={e => {\n                              // Handle inline editing here\n                              const newValue = e.target.value;\n                              // Update the playerScore in your data structure\n                              // You might need to use setState or update your data source accordingly\n                          }}\n                      />\n                  );\n              } else {\n                  return ( \n                    <h6>Not Played</h6>\n                  ); // Just display the player score if it's not above 0\n              }\n          }\n        },*/\n        {\n          Header: 'Player Score',\n            accessor: 'playerScore',\n            Cell: tableProps => {\n                const { playerScore, id } = tableProps.row.original;\n                const [isEditing, setIsEditing] = React.useState(false);\n                const [editedScore, setEditedScore] = React.useState(playerScore);\n\n                const handleEdit = () => {\n                    setIsEditing(true);\n                };\n\n                const handleSave = () => {\n                    // Save the edited score\n                    // For demonstration, just log the edited score to the console\n                    console.log(`New score for ID ${id}: ${editedScore}`);\n\n                    // You can update the data structure or make an API call to update the score here\n\n                    setIsEditing(false);\n                };\n\n                const handleCancel = () => {\n                    // Cancel editing\n                    setEditedScore(playerScore);\n                    setIsEditing(false);\n                };\n\n                return (\n                    <div>\n                        {isEditing ? (\n                            <div>\n                                <input\n                                    type=\"text\"\n                                    value={editedScore}\n                                    onChange={e => setEditedScore(e.target.value)}\n                                />\n                                <button onClick={handleSave}>Save</button>\n                                <button onClick={handleCancel}>Cancel</button>\n                            </div>\n                        ) : (\n                            <div>\n                                {playerScore > 0 && (\n                                    <button onClick={handleEdit}>Edit</button>\n                                )}\n                                <h6>{playerScore > 0 ? playerScore : 'Not Played'}</h6>\n                            </div>\n                        )}\n                    </div>\n                );\n              },\n        },\n        {\n          Header: (localStorage.role === 'Admin' )? 'Edit':' ',\n          Cell: tableProps => (\n            <div>\n              {(localStorage.role === 'Admin' )? \n              <button style={{ borderRadius: 50 }} \n                    className = \" btn\"   \n                    disabled = {loading}\n                    hidden= {tableProps.row.original.playerScore <= 0}>\n                   <FaRegEdit />\n              </button>\n              \n              : \n              <></>}             \n                        \n            </div> ),      \n        },\n      \n          {\n            Header: (localStorage.role === 'Admin' )? 'Delete':' ',\n            Cell: tableProps => (\n              <div>\n                {(localStorage.role === 'Admin' )? \n                <button style={{ borderRadius: 50 }} \n                      onClick={(e)=>{ deleteEventScoring(tableProps.row.original.id);}} \n                      className = \" btn\"   \n                      disabled = {loading}>\n                      <RiIcons.RiDeleteBin6Line/>\n                </button>\n                \n                : \n                <></>}             \n                          \n              </div> ),      \n            }\n    ],\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n  } = useTable({ columns, data  },useGlobalFilter)\n\n  const {globalFilter} = state\n\n  async function deleteEventScoring(id) {\n\n    const confirmed = window.confirm('Are you sure you want to remove this player from this event?');\n    if (!confirmed) {\n      return;\n    }\n    setLoading(true);\n    try {\n      await EventService.deleteEventScoring(id);\n      localStorage.message = \"Player Removed from Event Successfully\";\n    } catch (error) {\n      console.log(error);\n      setError('Failed to Remove Player from Event');\n    } finally {\n      setLoading(false);\n      window.location.reload(false);\n    }\n  } \n  return (\n    <div>\n         <h1 className = \"text-center\"><GiGolfTee style={{ marginBottom: 10,marginRight: 5}}/>Event Scoring</h1>\n         <div style={{float:\"right\",paddingRight:10}}> \n         {(localStorage.role != \"Admin\")? <button type=\"button\" className = \"btn btn-primary mb-2 \" onClick={()=>{navigate('/add-scores')}} style={{marginRight: 10}}><MdScoreboard style={{ width: 20,height:20,marginRight: 5,marginBottom:2}}/>Add Scores</button> : <></>}\n            <CSVLink data = {data} filename = 'Golf Event Scorings'> <button type=\"button\" className = \"btn btn-primary mb-2\">  <SiIcons.SiMicrosoftexcel  style={{ width: 20,height:20,marginRight: 5 ,marginBottom: 3}}/>Download</button> </CSVLink>\n        </div> \n        <div className='rowC' >\n              <GlobalFilter filter = {globalFilter} setFilter = {setGlobalFilter} />  \n              <div style={{  width: 200, marginLeft: 10,borderRadius: 10,  borderColor: 'grey'}}>      \n              <Select style={{ width: 500,  borderRadius: 50}}\n                  value={divisions.value}                                           \n                  isSearchable={false}\n                  onChange = {(e) =>{ fetchDataByDivision(e.label);  }} \n                  options={divisions}\n                  defaultValue={divisions[0]}\n                  styles={{\n                    control: (baseStyles, state) => ({\n                      ...baseStyles,\n                      borderRadius: \"20px\"\n                    })\n                  }}                  \n              />         \n              </div>                            \n        </div>\n       {// <TableScrollbar height = \"70vh\"  style={{ marginBottom: 10 ,marginRight: 5,border:'1px solid'}}>\n        }\n        \n        <div style={{ maxWidth: '99.9%' }}>\n          <>\n          \n        <table {...getTableProps()} className = \"table table-striped\" style ={{height:20}}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th {...column.getHeaderProps()} style = {{background: 'white'}}> {column.render('Header')} </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          {loading?\n                <div style={{marginBottom:0}}>                    \n                    <ClipLoader\n                        color={\"#0d6efd\"}\n                        loading={loading}        \n                        size = {50}\n    \n                        cssOverride={{marginLeft:'370%',marginRight:'auto',marginTop:'20%'}}          \n                    />\n                </div>\n                :\n                <></>    \n            }\n         \n          <tbody {...getTableBodyProps()}>\n            {\n              (!loading)?\n              rows.map(row => {\n                prepareRow(row)\n                return (\n                  <tr {...row.getRowProps()}>\n                    {row.cells.map(cell => {\n                      return (\n                        <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                      )\n                    })}\n                  </tr>\n                )\n              })\n              :\n              <></>\n          }\n          </tbody>\n        </table>\n        </>\n        </div>\n      {//</TableScrollbar>\n}\n    </div>\n  )\n}\nexport default EventScoringReactTable;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,eAAe,QAAQ,aAAa;AACvD,OAAOC,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C,OAAOC,YAAY,MAAM,gCAAgC;AACzD,SAAQC,OAAO,QAAO,WAAW;AACjC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AACzC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,OAAOC,GAAG,MAAM,0BAA0B;AAE1C,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,YAAY,MAAM,gCAAgC;AACzD,MAAMC,SAAS,GAAG,CAChB;EAAEC,KAAK,EAAE,eAAe;EAAEC,KAAK,EAAE;AAAgB,CAAC,EAClD;EAAED,KAAK,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAK,CAAC,EAC5B;EAAED,KAAK,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAK,CAAC,CAC7B;AAGD,MAAMC,sBAAsB,GAAC,MAAI;EAC/B,MAAMC,QAAQ,GAACR,WAAW,EAAE;EAC5B,MAAM,CAACS,IAAI,EAACC,gBAAgB,CAAC,GAACxB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACyB,OAAO,EAACC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM6B,YAAY,GAAG,EAAE;EAEvB5B,SAAS,CAAC,MAAI;IACZ,eAAe6B,SAAS,GAAG;MACzBJ,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMb,aAAa,CAACkB,UAAU,EAAE,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAClD,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACV,IAAI,CAACY,MAAM,EAAED,CAAC,EAAE,EAC5C;UACQ;YAACL,YAAY,CAACO,IAAI,CAAC;cACfC,IAAI,EAAEJ,QAAQ,CAACV,IAAI,CAACW,CAAC,CAAC,CAACG,IAAI;cAC3BC,KAAK,EAAEL,QAAQ,CAACV,IAAI,CAACW,CAAC,CAAC,CAACI;YAC5B,CAAC,CAAC;UACN;QACJ;MACF,CAAC,CAAC;MACF,MAAMrB,YAAY,CAACsB,gBAAgB,EAAE,CAACP,IAAI,CAAEC,QAAQ,IAAK;QACvDT,gBAAgB,CAACS,QAAQ,CAACV,IAAI,CAAC;MACnC,CAAC,CAAC;MACAG,UAAU,CAAC,KAAK,CAAC;IAEnB;IACAI,SAAS,EAAE;EACb,CAAC,EAAC,EAAE,CAAC;EACL,eAAeU,mBAAmB,CAACC,QAAQ,EAAE;IAC3Cf,UAAU,CAAC,IAAI,CAAC;IAChB;IACA,MAAMT,YAAY,CAACyB,0BAA0B,CAACD,QAAQ,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAK;MACzET,gBAAgB,CAACS,QAAQ,CAACV,IAAI,CAAC;IACjC,CAAC,CAAC;IACFG,UAAU,CAAC,KAAK,CAAC;EACnB;EACA,MAAMiB,QAAQ,GAAIC,UAAU,IAAK;IAC/B,MAAMC,WAAW,GAAGhB,YAAY,CAACiB,IAAI,CAACC,MAAM,IAAIH,UAAU,KAAKG,MAAM,CAACV,IAAI,CAAC;IAC3E,IAAIQ,WAAW,EAAE;MACfG,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,UAAU,EAAEC,WAAW,CAACR,IAAI,CAAC;MAClD,OAAOQ,WAAW,CAACP,KAAK;IAC1B;IACA,OAAO,IAAI;EACb,CAAC;EAGD,MAAMY,OAAO,GAAGnD,KAAK,CAACoD,OAAO,CAC3B,MAAM,CACF;IACIC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,MAAM,EAAE,UAAU;IAClBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,MAAM,EAAE,aAAa;IACrBC,QAAQ,EAAE,QAAQ;IAClBC,IAAI,EAAEC,UAAU,iBACd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACC,oBAAC,WAAW;MAAC,KAAK,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAACC,WAAW,EAAE,CAAC;QAACC,SAAS,EAAC,CAAC;MAAC,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAE,EACzEJ,UAAU,CAACK,GAAG,CAACC,QAAQ,CAACC,MAAM;EAErC,CAAC,EACD;IACEV,MAAM,EAAE,UAAU;IAClBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,MAAM,EAAE,iBAAiB;IACzBC,QAAQ,EAAE,cAAc;IACxBC,IAAI,EAAEC,UAAU,iBACZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACG;MAAK,GAAG,EAAG,0BAAyBZ,QAAQ,CAACY,UAAU,CAACK,GAAG,CAACC,QAAQ,CAACE,YAAY,CAAE,EAAE;MAAE,KAAK,EAAE;QAAEP,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAC,EAAE;QAACC,WAAW,EAAE;MAAG,CAAE;MAAC,SAAS,EAAG,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAE,EAE7JH,UAAU,CAACK,GAAG,CAACC,QAAQ,CAACE,YAAY;EAE/C,CAAC,EACD;IACEX,MAAM,EAAE,QAAQ;IAChBE,IAAI,EAAEC,UAAU,iBACd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAEH;MAAM,GAAG,EAAG3C,GAAI;MAAC,KAAK,EAAE;QAAE4C,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAC;MAAG,CAAE;MAAC,SAAS,EAAG,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EAClEF,UAAU,CAACK,GAAG,CAACC,QAAQ,CAACG,QAAQ,SAAKT,UAAU,CAACK,GAAG,CAACC,QAAQ,CAACI,UAAU,CAK7E;IACDZ,QAAQ,EAAE;IACX;EACD,CAAC;EACD;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACQ;IACED,MAAM,EAAE,cAAc;IACpBC,QAAQ,EAAE,aAAa;IACvBC,IAAI,EAAEC,UAAU,IAAI;MAChB,MAAM;QAAEW,WAAW;QAAEC;MAAG,CAAC,GAAGZ,UAAU,CAACK,GAAG,CAACC,QAAQ;MACnD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGtE,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;MACvD,MAAM,CAACsE,WAAW,EAAEC,cAAc,CAAC,GAAGxE,KAAK,CAACC,QAAQ,CAACkE,WAAW,CAAC;MAEjE,MAAMM,UAAU,GAAG,MAAM;QACrBH,YAAY,CAAC,IAAI,CAAC;MACtB,CAAC;MAED,MAAMI,UAAU,GAAG,MAAM;QACrB;QACA;QACAzB,OAAO,CAACC,GAAG,CAAE,oBAAmBkB,EAAG,KAAIG,WAAY,EAAC,CAAC;;QAErD;;QAEAD,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC;MAED,MAAMK,YAAY,GAAG,MAAM;QACvB;QACAH,cAAc,CAACL,WAAW,CAAC;QAC3BG,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC;MAED,oBACI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACKD,SAAS,gBACN;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QACI,IAAI,EAAC,MAAM;QACX,KAAK,EAAEE,WAAY;QACnB,QAAQ,EAAEK,CAAC,IAAIJ,cAAc,CAACI,CAAC,CAACC,MAAM,CAACzD,KAAK,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAChD,eACF;QAAQ,OAAO,EAAEsD,UAAW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,UAAc,eAC1C;QAAQ,OAAO,EAAEC,YAAa;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,YAAgB,CAC5C,gBAEN;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACKR,WAAW,GAAG,CAAC,iBACZ;QAAQ,OAAO,EAAEM,UAAW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,UAC/B,eACD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAKN,WAAW,GAAG,CAAC,GAAGA,WAAW,GAAG,YAAY,CAAM,CAE9D,CACC;IAEZ;EACN,CAAC,EACD;IACEd,MAAM,EAAGyB,YAAY,CAACC,IAAI,KAAK,OAAO,GAAI,MAAM,GAAC,GAAG;IACpDxB,IAAI,EAAEC,UAAU,iBACd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACIsB,YAAY,CAACC,IAAI,KAAK,OAAO,gBAC/B;MAAQ,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MAC9B,SAAS,EAAG,MAAM;MAClB,QAAQ,EAAItD,OAAQ;MACpB,MAAM,EAAG8B,UAAU,CAACK,GAAG,CAACC,QAAQ,CAACK,WAAW,IAAI,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACnD,oBAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACT,gBAGT,yCAAK;EAGX,CAAC,EAEC;IACEd,MAAM,EAAGyB,YAAY,CAACC,IAAI,KAAK,OAAO,GAAI,QAAQ,GAAC,GAAG;IACtDxB,IAAI,EAAEC,UAAU,iBACd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACIsB,YAAY,CAACC,IAAI,KAAK,OAAO,gBAC/B;MAAQ,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MAC9B,OAAO,EAAGJ,CAAC,IAAG;QAAEK,kBAAkB,CAACzB,UAAU,CAACK,GAAG,CAACC,QAAQ,CAACM,EAAE,CAAC;MAAC,CAAE;MACjE,SAAS,EAAG,MAAM;MAClB,QAAQ,EAAI1C,OAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACpB,oBAAC,OAAO,CAAC,gBAAgB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAE,CACxB,gBAGT,yCAAK;EAGT,CAAC,CACR,EACD,EAAE,CACH;EAED,MAAM;IACJwD,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC,UAAU;IACVC,KAAK;IACLC;EACF,CAAC,GAAG1F,QAAQ,CAAC;IAAEqD,OAAO;IAAE3B;EAAM,CAAC,EAACzB,eAAe,CAAC;EAEhD,MAAM;IAAC0F;EAAY,CAAC,GAAGF,KAAK;EAE5B,eAAeN,kBAAkB,CAACb,EAAE,EAAE;IAEpC,MAAMsB,SAAS,GAAGC,MAAM,CAACC,OAAO,CAAC,8DAA8D,CAAC;IAChG,IAAI,CAACF,SAAS,EAAE;MACd;IACF;IACA/D,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMT,YAAY,CAAC+D,kBAAkB,CAACb,EAAE,CAAC;MACzCU,YAAY,CAACe,OAAO,GAAG,wCAAwC;IACjE,CAAC,CAAC,OAAOjE,KAAK,EAAE;MACdqB,OAAO,CAACC,GAAG,CAACtB,KAAK,CAAC;MAClBC,QAAQ,CAAC,oCAAoC,CAAC;IAChD,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;MACjBgE,MAAM,CAACG,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC;IAC/B;EACF;EACA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACK;IAAI,SAAS,EAAG,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAC,oBAAC,SAAS;IAAC,KAAK,EAAE;MAAEC,YAAY,EAAE,EAAE;MAACrC,WAAW,EAAE;IAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,kBAAkB,eACvG;IAAK,KAAK,EAAE;MAACsC,KAAK,EAAC,OAAO;MAACC,YAAY,EAAC;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC1CpB,YAAY,CAACC,IAAI,IAAI,OAAO,gBAAG;IAAQ,IAAI,EAAC,QAAQ;IAAC,SAAS,EAAG,uBAAuB;IAAC,OAAO,EAAE,MAAI;MAACxD,QAAQ,CAAC,aAAa,CAAC;IAAA,CAAE;IAAC,KAAK,EAAE;MAACoC,WAAW,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAC,oBAAC,YAAY;IAAC,KAAK,EAAE;MAAEF,KAAK,EAAE,EAAE;MAACC,MAAM,EAAC,EAAE;MAACC,WAAW,EAAE,CAAC;MAACqC,YAAY,EAAC;IAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eAAmB,gBAAG,yCAAK,eACjQ,oBAAC,OAAO;IAAC,IAAI,EAAIxE,IAAK;IAAC,QAAQ,EAAG,qBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qBAAE;IAAQ,IAAI,EAAC,QAAQ;IAAC,SAAS,EAAG,sBAAsB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAAG,oBAAC,OAAO,CAAC,gBAAgB;IAAE,KAAK,EAAE;MAAEiC,KAAK,EAAE,EAAE;MAACC,MAAM,EAAC,EAAE;MAACC,WAAW,EAAE,CAAC;MAAEqC,YAAY,EAAE;IAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,aAAiB,MAAW,CACzO,eACN;IAAK,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACf,oBAAC,YAAY;IAAC,MAAM,EAAIP,YAAa;IAAC,SAAS,EAAID,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACtE;IAAK,KAAK,EAAE;MAAG/B,KAAK,EAAE,GAAG;MAAE0C,UAAU,EAAE,EAAE;MAACnB,YAAY,EAAE,EAAE;MAAGoB,WAAW,EAAE;IAAM,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClF,oBAAC,MAAM;IAAC,KAAK,EAAE;MAAE3C,KAAK,EAAE,GAAG;MAAGuB,YAAY,EAAE;IAAE,CAAE;IAC5C,KAAK,EAAE7D,SAAS,CAACC,KAAM;IACvB,YAAY,EAAE,KAAM;IACpB,QAAQ,EAAKwD,CAAC,IAAI;MAAEnC,mBAAmB,CAACmC,CAAC,CAACvD,KAAK,CAAC;IAAG,CAAE;IACrD,OAAO,EAAEF,SAAU;IACnB,YAAY,EAAEA,SAAS,CAAC,CAAC,CAAE;IAC3B,MAAM,EAAE;MACNkF,OAAO,EAAE,CAACC,UAAU,EAAEf,KAAK,MAAM;QAC/B,GAAGe,UAAU;QACbtB,YAAY,EAAE;MAChB,CAAC;IACH,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACJ,CACI,CACN,eAIN;IAAK,KAAK,EAAE;MAAEuB,QAAQ,EAAE;IAAQ,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChC,uDAEF,+CAAWrB,aAAa,EAAE;IAAE,SAAS,EAAG,qBAAqB;IAAC,KAAK,EAAG;MAACxB,MAAM,EAAC;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAChF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG0B,YAAY,CAACoB,GAAG,CAACC,WAAW,iBAC3B,4CAAQA,WAAW,CAACC,mBAAmB,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACtCD,WAAW,CAACE,OAAO,CAACH,GAAG,CAACI,MAAM,iBAC7B,4CAAQA,MAAM,CAACC,cAAc,EAAE;IAAE,KAAK,EAAI;MAACC,UAAU,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SAAGF,MAAM,CAACG,MAAM,CAAC,QAAQ,CAAC,MAC3F,CAAC,CAEL,CAAC,CACI,EACPrF,OAAO,gBACF;IAAK,KAAK,EAAE;MAACsE,YAAY,EAAC;IAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzB,oBAAC,UAAU;IACP,KAAK,EAAE,SAAU;IACjB,OAAO,EAAEtE,OAAQ;IACjB,IAAI,EAAI,EAAG;IAEX,WAAW,EAAE;MAACyE,UAAU,EAAC,MAAM;MAACxC,WAAW,EAAC,MAAM;MAACC,SAAS,EAAC;IAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACtE,CACA,gBAEN,yCAAK,eAGX,+CAAWuB,iBAAiB,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAEzB,CAACzD,OAAO,GACT2D,IAAI,CAACmB,GAAG,CAAC3C,GAAG,IAAI;IACdyB,UAAU,CAACzB,GAAG,CAAC;IACf,oBACE,4CAAQA,GAAG,CAACmD,WAAW,EAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,IACtBnD,GAAG,CAACoD,KAAK,CAACT,GAAG,CAACU,IAAI,IAAI;MACrB,oBACE,4CAAQA,IAAI,CAACC,YAAY,EAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,SAAID,IAAI,CAACH,MAAM,CAAC,MAAM,CAAC,MAAO;IAE7D,CAAC,CAAC,CACC;EAET,CAAC,CAAC,gBAEF,yCAAK,CAED,CACF,CACL,CACG,CAGJ;AAEV,CAAC;AACD,eAAezF,sBAAsB"},"metadata":{},"sourceType":"module"}