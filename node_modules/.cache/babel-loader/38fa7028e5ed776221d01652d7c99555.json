{"ast":null,"code":"import axios from 'axios';\nconst SERVER_URL = 'http://localhost:8080';\nconst MATCHES_REST_API_URL = SERVER_URL + '/findAllMatches';\nconst MATCHES_DAY_SUMMARY_REST_API_URL = SERVER_URL + '/findAllMatchDaySummary';\nconst TEAM_STANDING_REST_API_URL = SERVER_URL + '/findTeamStanding';\nconst MATCHES_CREATE_REST_API_URL = SERVER_URL + '/addMatches';\nconst MATCH_SUMMARY_DELETE = SERVER_URL + '/deleteMatchSummary';\nconst RESET_SEASON = SERVER_URL + '/resetSeason';\nclass MatchService {\n  getMatches() {\n    return axios.get(MATCHES_REST_API_URL);\n  }\n  getMatchesByDivision(division) {\n    return axios.get(MATCHES_REST_API_URL + \"/\" + division);\n  }\n  createMatches(matches) {\n    return axios.post(MATCHES_CREATE_REST_API_URL, matches);\n  }\n  getMatchesDaySummary() {\n    return axios.get(MATCHES_DAY_SUMMARY_REST_API_URL);\n  }\n  getMatchesDaySummaryByDivision(division) {\n    return axios.get(MATCHES_DAY_SUMMARY_REST_API_URL + \"/\" + division);\n  }\n  getTeamStanding() {\n    return axios.get(TEAM_STANDING_REST_API_URL);\n  }\n  getTeamStandingByDivisionAndSchool(division, school) {\n    return axios.get(TEAM_STANDING_REST_API_URL + \"/\" + division + \"/\" + school);\n  }\n  getTeamStandingByDivision(division) {\n    if (division === 'All') {\n      return axios.get(TEAM_STANDING_REST_API_URL);\n    } else {\n      return axios.get(TEAM_STANDING_REST_API_URL + \"/\" + division);\n    }\n  }\n  deleteMatchSummary(matchSummaryID) {\n    return axios.get(MATCH_SUMMARY_DELETE + \"/\" + matchSummaryID);\n  }\n  resetSeason() {\n    return axios.get(RESET_SEASON);\n  }\n}\nexport default new MatchService();","map":{"version":3,"names":["axios","SERVER_URL","MATCHES_REST_API_URL","MATCHES_DAY_SUMMARY_REST_API_URL","TEAM_STANDING_REST_API_URL","MATCHES_CREATE_REST_API_URL","MATCH_SUMMARY_DELETE","RESET_SEASON","MatchService","getMatches","get","getMatchesByDivision","division","createMatches","matches","post","getMatchesDaySummary","getMatchesDaySummaryByDivision","getTeamStanding","getTeamStandingByDivisionAndSchool","school","getTeamStandingByDivision","deleteMatchSummary","matchSummaryID","resetSeason"],"sources":["C:/Users/ricky/Desktop/CAA/CAAGolfPlatformFrontEnd-main/src/services/MatchService.js"],"sourcesContent":["import axios from 'axios'\nconst SERVER_URL = 'http://localhost:8080';\nconst MATCHES_REST_API_URL = SERVER_URL + '/findAllMatches';\nconst MATCHES_DAY_SUMMARY_REST_API_URL = SERVER_URL + '/findAllMatchDaySummary';\nconst TEAM_STANDING_REST_API_URL = SERVER_URL + '/findTeamStanding';\nconst MATCHES_CREATE_REST_API_URL = SERVER_URL + '/addMatches';\nconst MATCH_SUMMARY_DELETE = SERVER_URL + '/deleteMatchSummary';\nconst RESET_SEASON =  SERVER_URL + '/resetSeason';\n\n\nclass MatchService {\n    getMatches(){\n       return  axios.get(MATCHES_REST_API_URL);\n    }\n    getMatchesByDivision(division){\n        return  axios.get(MATCHES_REST_API_URL+\"/\"+division);\n    }\n    createMatches(matches){\n        return axios.post(MATCHES_CREATE_REST_API_URL,matches)\n    }\n    getMatchesDaySummary(){\n        return  axios.get(MATCHES_DAY_SUMMARY_REST_API_URL);\n    }\n    getMatchesDaySummaryByDivision(division){\n        return  axios.get(MATCHES_DAY_SUMMARY_REST_API_URL+\"/\"+division);\n    }\n    getTeamStanding(){\n        return  axios.get(TEAM_STANDING_REST_API_URL);\n    }\n    getTeamStandingByDivisionAndSchool(division,school){\n        return  axios.get(TEAM_STANDING_REST_API_URL+\"/\"+division+\"/\"+school);\n    }\n    getTeamStandingByDivision(division){\n        if(division ==='All'){\n            return  axios.get(TEAM_STANDING_REST_API_URL)\n        }\n        else{\n            return  axios.get(TEAM_STANDING_REST_API_URL+\"/\"+division);\n        }\n    }\n    deleteMatchSummary(matchSummaryID){\n        return  axios.get(MATCH_SUMMARY_DELETE+\"/\"+matchSummaryID);\n    }\n    resetSeason(){\n        return axios.get(RESET_SEASON);\n    }\n\n}\n\nexport default new MatchService()\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,UAAU,GAAG,uBAAuB;AAC1C,MAAMC,oBAAoB,GAAGD,UAAU,GAAG,iBAAiB;AAC3D,MAAME,gCAAgC,GAAGF,UAAU,GAAG,yBAAyB;AAC/E,MAAMG,0BAA0B,GAAGH,UAAU,GAAG,mBAAmB;AACnE,MAAMI,2BAA2B,GAAGJ,UAAU,GAAG,aAAa;AAC9D,MAAMK,oBAAoB,GAAGL,UAAU,GAAG,qBAAqB;AAC/D,MAAMM,YAAY,GAAIN,UAAU,GAAG,cAAc;AAGjD,MAAMO,YAAY,CAAC;EACfC,UAAU,GAAE;IACT,OAAQT,KAAK,CAACU,GAAG,CAACR,oBAAoB,CAAC;EAC1C;EACAS,oBAAoB,CAACC,QAAQ,EAAC;IAC1B,OAAQZ,KAAK,CAACU,GAAG,CAACR,oBAAoB,GAAC,GAAG,GAACU,QAAQ,CAAC;EACxD;EACAC,aAAa,CAACC,OAAO,EAAC;IAClB,OAAOd,KAAK,CAACe,IAAI,CAACV,2BAA2B,EAACS,OAAO,CAAC;EAC1D;EACAE,oBAAoB,GAAE;IAClB,OAAQhB,KAAK,CAACU,GAAG,CAACP,gCAAgC,CAAC;EACvD;EACAc,8BAA8B,CAACL,QAAQ,EAAC;IACpC,OAAQZ,KAAK,CAACU,GAAG,CAACP,gCAAgC,GAAC,GAAG,GAACS,QAAQ,CAAC;EACpE;EACAM,eAAe,GAAE;IACb,OAAQlB,KAAK,CAACU,GAAG,CAACN,0BAA0B,CAAC;EACjD;EACAe,kCAAkC,CAACP,QAAQ,EAACQ,MAAM,EAAC;IAC/C,OAAQpB,KAAK,CAACU,GAAG,CAACN,0BAA0B,GAAC,GAAG,GAACQ,QAAQ,GAAC,GAAG,GAACQ,MAAM,CAAC;EACzE;EACAC,yBAAyB,CAACT,QAAQ,EAAC;IAC/B,IAAGA,QAAQ,KAAI,KAAK,EAAC;MACjB,OAAQZ,KAAK,CAACU,GAAG,CAACN,0BAA0B,CAAC;IACjD,CAAC,MACG;MACA,OAAQJ,KAAK,CAACU,GAAG,CAACN,0BAA0B,GAAC,GAAG,GAACQ,QAAQ,CAAC;IAC9D;EACJ;EACAU,kBAAkB,CAACC,cAAc,EAAC;IAC9B,OAAQvB,KAAK,CAACU,GAAG,CAACJ,oBAAoB,GAAC,GAAG,GAACiB,cAAc,CAAC;EAC9D;EACAC,WAAW,GAAE;IACT,OAAOxB,KAAK,CAACU,GAAG,CAACH,YAAY,CAAC;EAClC;AAEJ;AAEA,eAAe,IAAIC,YAAY,EAAE"},"metadata":{},"sourceType":"module"}